{"version":3,"sources":["constants/common.js","apis.js","helper.js","services/service.js","pages/Index.js"],"names":["module","exports","vendingMachine","price","rs","enterItemsToPurchase","enterCashAmount","purchase","refund","enterPurchaseToken","amountOnStock","data","items","transaction","Send","method","url","a","axios","response","getDataService","purchaseService","formData","refundService","purchaseToken","Index","useState","setData","loading","setLoading","purchasing","setPurchasing","itemSelected","setItemSelected","amountToPurchase","setAmountToPurchase","cashEntered","setCashEntered","Init","type","Swal","fire","msg","message","proceedPurchase","isNaN","itemName","amountPurchased","amountCharged","returnAmount","useEffect","className","to","map","index","pricePerItem","stock","onClick","selectItem","htmlFor","value","onChange","e","target","min","id","placeholder","disabled"],"mappings":"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","file":"static/js/4.f8de2586.chunk.js","sourcesContent":["module.exports = {\n\tvendingMachine: \"Outside Vending Machine\",\n\tprice: \"Price\",\n\trs: \"Rs\",\n\tenterItemsToPurchase: \"Enter items to purchase\",\n\tenterCashAmount: \"Enter cash amount\",\n\tpurchase: \"Purchase\",\n\trefund: \"Refund\",\n\tenterPurchaseToken: \"Enter purchase Token\",\n\tamountOnStock: \"Stock\",\n};\n","module.exports = {\n\tdata: {\n\t\titems: \"/data/items\",\n\t},\n\ttransaction: {\n\t\tpurchase: \"/transaction/purchase\",\n\t\trefund: \"/transaction/refund\",\n\t},\n};\n","import axios from \"axios\";\n// let baseUrl = \"http://localhost:5000/api\"\nlet baseUrl = \"/api\";\nexport const Send = async (method, url, data) => {\n\tlet response =  await axios({\n\t\tmethod,\n\t\tdata,\n\t\turl: baseUrl + url,\n\t})\n    return response.data\n};\n","import { data,transaction  } from \"../apis\"\nimport { Send } from \"../helper\"\n\nexport const getDataService = async ()=>{\n    return await Send(\"GET\",data.items)\n}\n\nexport const purchaseService = async (formData)=>{\n    return await Send(\"POST\",transaction.purchase,formData)\n}\n\nexport const refundService = async (purchaseToken)=>{\n    return await Send(\"GET\",`${transaction.refund}/${purchaseToken}`)\n}\n","import { useEffect, useState } from \"react\";\nimport {\n\tamountOnStock,\n\tenterCashAmount,\n\tenterItemsToPurchase,\n\tprice,\n\tpurchase,\n\trefund,\n\trs,\n\tvendingMachine,\n} from \"../constants/common\";\nimport { getDataService, purchaseService } from \"../services/service\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nconst Index = () => {\n\tconst [data, setData] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [purchasing, setPurchasing] = useState(false);\n\tconst [itemSelected, setItemSelected] = useState(\"\");\n\tconst [amountToPurchase, setAmountToPurchase] = useState(1);\n\tconst [cashEntered, setCashEntered] = useState(0);\n\t//initialization function\n\t//will load data from backend to show on vending machine\n\tconst Init = async () => {\n\t\ttry {\n\t\t\tlet response = await getDataService();\n\t\t\tif (response.type === \"error\") {\n\t\t\t\tSwal.fire(\"Error\", response.msg, \"error\");\n\t\t\t} else {\n\t\t\t\tsetData(response.data.items);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tSwal.fire(\"Error\", e.message, \"error\");\n\t\t}\n\t\tsetLoading(false);\n\t};\n\t//selecting item for purchasing\n\tconst selectItem = (itemName) => {\n\t\tsetItemSelected(itemName);\n\t};\n\tconst proceedPurchase = async () => {\n\t\t//don't process if data are empty\n\t\tif (\n\t\t\titemSelected !== \"\" &&\n\t\t\tamountToPurchase !== \"\" &&\n\t\t\tcashEntered !== \"\" &&\n\t\t\t!isNaN(amountToPurchase) &&\n\t\t\t!isNaN(cashEntered)\n\t\t) {\n\t\t\tsetPurchasing(true);\n\t\t\ttry {\n\t\t\t\tlet response = await purchaseService({\n\t\t\t\t\titemName: itemSelected,\n\t\t\t\t\tamountToPurchase,\n\t\t\t\t\tcashEntered,\n\t\t\t\t});\n\t\t\t\t//if any error on purchase\n\t\t\t\tif (response.type === \"error\") {\n\t\t\t\t\tSwal.fire(\"Error\", response.msg, \"error\");\n\t\t\t\t} else {\n\t\t\t\t\t//purhcase is done\n\t\t\t\t\tlet {\n\t\t\t\t\t\tpurchaseToken,\n\t\t\t\t\t\tamountPurchased,\n\t\t\t\t\t\tamountCharged,\n\t\t\t\t\t\treturnAmount,\n\t\t\t\t\t} = response.data;\n\t\t\t\t\tSwal.fire(\n\t\t\t\t\t\t\"Purchase Success\",\n\t\t\t\t\t\t`\n                        Purchase successful.\n                        <br/>\n                        <br/>\n                        Purchase Token : ${purchaseToken}\n                        <br/>\n                        Purchased Amount : ${amountPurchased}\n                        <br/>\n                        Charged Amount : ${amountCharged}\n                        <br/>\n                        Return Change : ${returnAmount}\n                    `,\n\t\t\t\t\t\t\"success\"\n\t\t\t\t\t);\n\t\t\t\t\t//clean up stuffs\n\t\t\t\t\tsetItemSelected(\"\");\n\t\t\t\t\tsetAmountToPurchase(\"\");\n\t\t\t\t\tsetCashEntered(\"\");\n\t\t\t\t\tInit();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tSwal.fire(\"Error\", e.msg, \"error\");\n\t\t\t}\n\t\t\tsetPurchasing(false);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tInit();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div className=\"title-text text-center\">\n\t\t\t\t\t\t{vendingMachine}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Link className=\"float-right\" to=\"/refund\">\n\t\t\t\t\t\tGo to {refund}\n\t\t\t\t\t</Link>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<>Loading ....</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{/* vending machine items showing part starts */}\n\n\t\t\t\t\t\t\t<div className=\"grid grid-3\">\n\t\t\t\t\t\t\t\t{data.map(\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t{ itemName, pricePerItem, stock },\n\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tkey={itemName}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectItem(itemName)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`card is-clickable ${\n\t\t\t\t\t\t\t\t\t\t\t\t\titemSelected === itemName &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"is-active\"\n\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* price */}\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{itemName}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t{price} : {rs}{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{pricePerItem}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* stock */}\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{amountOnStock} : {stock}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/* vending machine items showing part ends */}\n\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{/* amount and cash entering part starts */}\n\t\t\t\t\t\t\t{itemSelected !== \"\" && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"itemsToPurchase\">\n\t\t\t\t\t\t\t\t\t\t{enterItemsToPurchase}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={amountToPurchase}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetAmountToPurchase(e.target.value)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tid=\"itemsToPurchase\"\n\t\t\t\t\t\t\t\t\t\tplaceholder={enterItemsToPurchase}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"cashAmount\">\n\t\t\t\t\t\t\t\t\t\t{enterCashAmount}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\t\tvalue={cashEntered}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetCashEntered(e.target.value)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tid=\"cashAmount\"\n\t\t\t\t\t\t\t\t\t\tplaceholder={enterCashAmount}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t{/* amount and cash entering part ends */}\n\n\t\t\t\t\t\t\t\t\t{/* button part starts */}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tdisabled={purchasing}\n\t\t\t\t\t\t\t\t\t\tonClick={proceedPurchase}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{purchase}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t{/* button part ends */}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default Index;\n"],"sourceRoot":""}